/*
 */
package cmp_303_systems_development_software.forms;

import cmp_303_systems_development_software.classes.Log;
import cmp_303_systems_development_software.classes.User;
import cmp_303_systems_development_software.handlers.FormHandler;
import cmp_303_systems_development_software.handlers.ViewHandler;
import cmp_303_systems_development_software.utils.Commands;
import cmp_303_systems_development_software.utils.DatabaseManager;
import cmp_303_systems_development_software.utils.StyleSetting;
import cmp_303_systems_development_software.views.TasksView;
import java.sql.SQLException;

/**
 *
 * @author joe
 */
public class InsertTask extends javax.swing.JFrame {

    private final User USER;
    private final ViewHandler VHANDLER;
    private final javax.swing.JPanel PARENT;
    private int jobID;
    private final java.util.HashMap<String, Integer> employees = new java.util.HashMap();
    
    /**
     * Creates new form UpdateForm
     * @param user The user that is logged in.
     * @param viewHandler The view handler from the dashboard.
     * @param panel The panel that the view is contained inside.
     * @param jobID The job_id of which job to view the tasks for.
     */
    public InsertTask(User user, ViewHandler viewHandler, javax.swing.JPanel panel, int jobID) {
        this.USER = user;
        this.VHANDLER = viewHandler;
        this.PARENT = panel;
        this.jobID = jobID;
        
        initComponents();
                
        this.setLocation(java.awt.Toolkit.getDefaultToolkit().getScreenSize().width / 2 - (this.getWidth() / 2), java.awt.Toolkit.getDefaultToolkit().getScreenSize().height / 2 - (this.getHeight() / 2));
        
        java.util.List<javax.swing.JButton> buttons = new java.util.ArrayList<>();
        
        buttons.add(btnInsertTask);
        
        StyleSetting.applyButtonStyles(buttons, btnInsertTask.getBackground(), btnInsertTask.getBorder());
        
        java.sql.ResultSet employeesRes = DatabaseManager.Query("SELECT e.employee_id, e.employee_forename, e.employee_surname, r.role_name FROM employees e JOIN employee_roles er ON e.employee_id = er.employee_id JOIN roles r ON er.role_id = r.role_id WHERE er.role_id = 3 AND e.employee_id NOT IN (SELECT employee_id FROM tasks GROUP BY employee_id HAVING COUNT(*) > 5)");
        try {
            while(employeesRes.next()){
                String s = employeesRes.getString("employee_forename") + " " + employeesRes.getString("employee_surname") + " (" + employeesRes.getString("role_name") + ")";
                comboEmployees.addItem(s);
                employees.put(s, employeesRes.getInt("employee_id"));
            }
        } catch (SQLException e) {
            FormHandler.openMessageBox(new MessageBox("Error!", e.getMessage(), javax.swing.JOptionPane.ERROR_MESSAGE));
        }
        
        java.sql.ResultSet res = DatabaseManager.Query("SELECT t.job_id, t.task_description, t.task_status, e.employee_forename, e.employee_surname, r.role_name FROM tasks t JOIN employees e ON e.employee_id = t.employee_id JOIN employee_roles er ON er.employee_id = e.employee_id JOIN roles r ON r.role_id = er.role_id WHERE job_id = ?", jobID);
        try {
            while(res.next()){
                String s = res.getString("employee_forename") + " " + res.getString("employee_surname") + " (" + res.getString("role_name") + ")";
                inputTaskDescription.setText(res.getString("task_description"));
                comboEmployees.setSelectedItem(s);
                comboStatus.setSelectedItem(res.getString("task_status"));
            }
        } catch (SQLException e) {
            FormHandler.openMessageBox(new MessageBox("Error!", e.getMessage(), javax.swing.JOptionPane.ERROR_MESSAGE));
        }
        
        DatabaseManager.Disconnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        inputTaskDescription = new javax.swing.JTextPane();
        comboStatus = new javax.swing.JComboBox<>();
        btnInsertTask = new javax.swing.JButton();
        comboEmployees = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        jPanel1.setForeground(new java.awt.Color(255, 102, 102));
        jPanel1.setMaximumSize(new java.awt.Dimension(606, 48));
        jPanel1.setMinimumSize(new java.awt.Dimension(606, 48));

        jLabel1.setBackground(new java.awt.Color(255, 153, 153));
        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() & ~java.awt.Font.BOLD, 26));
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Red Star Auto Mechanics - Insert Task");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jLabel1.setFocusable(false);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel1.setInheritsPopupMenu(false);

        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cmp_303_systems_development_software/assets/logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        inputTaskDescription.setBackground(new java.awt.Color(204, 204, 204));
        inputTaskDescription.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        inputTaskDescription.setForeground(new java.awt.Color(102, 102, 102));
        inputTaskDescription.setText("Task Description");
        inputTaskDescription.setToolTipText("Description of task.");
        inputTaskDescription.setPreferredSize(new java.awt.Dimension(200, 20));
        inputTaskDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputTaskDescriptionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputTaskDescriptionFocusLost(evt);
            }
        });
        inputTaskDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputTaskDescriptioninputKeyTyped(evt);
            }
        });

        comboStatus.setBackground(new java.awt.Color(204, 204, 204));
        comboStatus.setEditable(true);
        comboStatus.setForeground(new java.awt.Color(102, 102, 102));
        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Task Status", "Ongoing", "Inspection", "Complete" }));
        comboStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        btnInsertTask.setBackground(new java.awt.Color(204, 204, 204));
        btnInsertTask.setForeground(new java.awt.Color(102, 102, 102));
        btnInsertTask.setText("Insert");
        btnInsertTask.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
        btnInsertTask.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInsertTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertTaskActionPerformed(evt);
            }
        });

        comboEmployees.setBackground(new java.awt.Color(204, 204, 204));
        comboEmployees.setEditable(true);
        comboEmployees.setForeground(new java.awt.Color(102, 102, 102));
        comboEmployees.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputTaskDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(comboEmployees, 0, 300, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInsertTask, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputTaskDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInsertTask, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputTaskDescriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputTaskDescriptionFocusGained
        if(inputTaskDescription.getText().equals("Task Description"))
            inputTaskDescription.setText("");
        
        inputTaskDescription.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(102, 102, 102)));
    }//GEN-LAST:event_inputTaskDescriptionFocusGained

    private void inputTaskDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputTaskDescriptionFocusLost
        if(inputTaskDescription.getText().isBlank() || inputTaskDescription.getText().isEmpty())
            inputTaskDescription.setText("Task Description");
        
        inputTaskDescription.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 153, 153)));
    }//GEN-LAST:event_inputTaskDescriptionFocusLost

    private void inputTaskDescriptioninputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTaskDescriptioninputKeyTyped
        
    }//GEN-LAST:event_inputTaskDescriptioninputKeyTyped

    private void btnInsertTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertTaskActionPerformed
        // TODO add your handling code here:
        if(DatabaseManager.Update("INSERT INTO tasks (task_description, task_status, employee_id, job_id) VALUES (?,?,?,?)", new Object[]{
            inputTaskDescription.getText(),
            (String) comboStatus.getSelectedItem(), 
            employees.get((String) comboEmployees.getSelectedItem()),
            jobID
        })){
            TasksView t = new TasksView(USER, VHANDLER);
            VHANDLER.changeView(t, PARENT);
            t.populate(this.jobID);
            this.dispose();
            new Log(Commands.getDateTime(), "Successfully inserted a new task", USER.getId()).send();
        }else{
            new Log(Commands.getDateTime(), "Failed to insert a new task", USER.getId()).send();
        }
    }//GEN-LAST:event_btnInsertTaskActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInsertTask;
    private javax.swing.JComboBox<String> comboEmployees;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JTextPane inputTaskDescription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel logo;
    // End of variables declaration//GEN-END:variables
}
